nhist = length(ksethist$history)
imrow = floor(sqrt(nhist))
imcol = ceiling(nhist/imrow)
par(mfrow=c(imrow,imcol),pty="s")
for (i in 1:nhist){
pm = paste("nclust=",length(unique(ksethist$history[[i]])),sep="")
plot(X[,1],X[,2],col=ksethist$history[[i]], main=pm, cex=0.4, pch=19)
}
library(maotai)
library(cluster)
npt = 300
inner.r = runif(npt, min=10, max=12); inner.theta = runif(npt, min=0, max=2*pi)
outer.r = runif(npt, min=20, max=22); outer.theta = runif(npt, min=0, max=2*pi)
X1 = cbind(inner.r*cos(inner.theta), inner.r*sin(inner.theta))
X2 = cbind(outer.r*cos(outer.theta), outer.r*sin(outer.theta))
X  = rbind(X1,X2)
cl.kmeans = kmeans(X,4)$cluster
# exactly follow the protocol from the paper
dX = as.matrix(dist(X))
ddX = array(0,c(nrow(dX),nrow(dX)))
for (i in 1:(nrow(dX)-1)){
for (j in (i+1):nrow(dX)){
if (dX[i,j] < 5){
ddX[i,j] <- ddX[j,i] <- 1
}
}
}
dpath       = maotai::shortestpath(ddX)
cl.kmedoids = cluster::pam(as.dist(dX),k=4)$clustering
cl.ksets    = ksets(as.dist(dpath),k=4, init="random")$cluster
cl.kmedgr   = cluster::pam(as.dist(dpath),k=4)$clustering
par(mfrow=c(2,2),pty="s")
plot(X[,1],X[,2],col=cl.kmeans, pch=19, main="naive k-means", cex=0.25)
plot(X[,1],X[,2],col=cl.kmedoids, pch=19, main="naive k-medoids", cex=0.25)
plot(X[,1],X[,2],col=cl.ksets, pch=19, main="graph k-sets", cex=0.25)
plot(X[,1],X[,2],col=cl.kmedgr, pch=19, main="graph k-medoids", cex=0.25)
# kset's history
ksethist = ksets(dpath,k=2,init="random")
nhist = length(ksethist$history)
imrow = floor(sqrt(nhist))
imcol = ceiling(nhist/imrow)
par(mfrow=c(imrow,imcol),pty="s")
for (i in 1:nhist){
pm = paste("nclust=",length(unique(ksethist$history[[i]])),sep="")
plot(X[,1],X[,2],col=ksethist$history[[i]], main=pm, cex=0.4, pch=19)
}
imrow
imcol
library(DAS)
# kset's history
ksethist = ksets(dpath,k=2,init="random")
nhist = length(ksethist$history)
imrow = floor(sqrt(nhist))
imcol = ceiling(nhist/imrow)
par(mfrow=c(imrow,imcol),pty="s")
for (i in 1:nhist){
pm = paste("nclust=",length(unique(ksethist$history[[i]])),sep="")
plot(X[,1],X[,2],col=ksethist$history[[i]], main=pm, cex=0.4, pch=19)
}
# kset's history
ksethist = ksets(dpath,k=2,init="random")
nhist = length(ksethist$history)
imrow = floor(sqrt(nhist))
imcol = ceiling(nhist/imrow)
par(mfrow=c(imrow,imcol),pty="s")
for (i in 1:nhist){
pm = paste("nclust=",length(unique(ksethist$history[[i]])),sep="")
plot(X[,1],X[,2],col=ksethist$history[[i]], main=pm, cex=0.4, pch=19)
}
# kset's history
ksethist = ksets(dpath,k=2,init="random")
nhist = length(ksethist$history)
imrow = floor(sqrt(nhist))
imcol = ceiling(nhist/imrow)
par(mfrow=c(imrow,imcol),pty="s")
for (i in 1:nhist){
pm = paste("nclust=",length(unique(ksethist$history[[i]])),sep="")
plot(X[,1],X[,2],col=ksethist$history[[i]], main=pm, cex=0.4, pch=19)
}
# kset's history
ksethist = ksets(dpath,k=2,init="random")
nhist = length(ksethist$history)
imrow = floor(sqrt(nhist))
imcol = ceiling(nhist/imrow)
par(mfrow=c(imrow,imcol),pty="s")
for (i in 1:nhist){
pm = paste("nclust=",length(unique(ksethist$history[[i]])),sep="")
plot(X[,1],X[,2],col=ksethist$history[[i]], main=pm, cex=0.4, pch=19)
}
# kset's history
ksethist = ksets(dpath,k=2,init="random")
nhist = length(ksethist$history)
imrow = floor(sqrt(nhist))
imcol = ceiling(nhist/imrow)
par(mfrow=c(imrow,imcol),pty="s")
for (i in 1:nhist){
pm = paste("nclust=",length(unique(ksethist$history[[i]])),sep="")
plot(X[,1],X[,2],col=ksethist$history[[i]], main=pm, cex=0.4, pch=19)
}
# kset's history
ksethist = ksets(dpath,k=2,init="random")
nhist = length(ksethist$history)
imrow = floor(sqrt(nhist))
imcol = ceiling(nhist/imrow)
par(mfrow=c(imrow,imcol),pty="s")
for (i in 1:nhist){
pm = paste("nclust=",length(unique(ksethist$history[[i]])),sep="")
plot(X[,1],X[,2],col=ksethist$history[[i]], main=pm, cex=0.4, pch=19)
}
ksethist
for (i in 1:nhist){
pm = paste("nclust=",length(unique(ksethist$history[[i]])),sep="")
plot(X[,1],X[,2],col=ksethist$cluster, main=pm, cex=0.4, pch=19)
}
ksethist = ksets(dpath,k=4,init="random")
nhist = length(ksethist$history)
imrow = floor(sqrt(nhist))
imcol = ceiling(nhist/imrow)
par(mfrow=c(imrow,imcol),pty="s")
for (i in 1:nhist){
pm = paste("nclust=",length(unique(ksethist$history[[i]])),sep="")
plot(X[,1],X[,2],col=ksethist$history[[i]], main=pm, cex=0.4, pch=19)
}
ksethist = ksets(dpath,k=4,init="random")
nhist = length(ksethist$history)
imrow = floor(sqrt(nhist))
imcol = ceiling(nhist/imrow)
par(mfrow=c(imrow,imcol),pty="s")
for (i in 1:nhist){
pm = paste("nclust=",length(unique(ksethist$history[[i]])),sep="")
plot(X[,1],X[,2],col=ksethist$history[[i]], main=pm, cex=0.4, pch=19)
}
ksethist = ksets(dpath,k=4,init="random")
nhist = length(ksethist$history)
imrow = floor(sqrt(nhist))
imcol = ceiling(nhist/imrow)
par(mfrow=c(imrow,imcol),pty="s")
for (i in 1:nhist){
pm = paste("nclust=",length(unique(ksethist$history[[i]])),sep="")
plot(X[,1],X[,2],col=ksethist$history[[i]], main=pm, cex=0.4, pch=19)
}
ksethist = ksets(dpath,k=4,init="random")
nhist = length(ksethist$history)
imrow = floor(sqrt(nhist))
imcol = ceiling(nhist/imrow)
par(mfrow=c(imrow,imcol),pty="s")
for (i in 1:nhist){
pm = paste("nclust=",length(unique(ksethist$history[[i]])),sep="")
plot(X[,1],X[,2],col=ksethist$history[[i]], main=pm, cex=0.4, pch=19)
}
ksethist = ksets(dpath,k=4,init="random")
nhist = length(ksethist$history)
imrow = floor(sqrt(nhist))
imcol = ceiling(nhist/imrow)
par(mfrow=c(imrow,imcol),pty="s")
for (i in 1:nhist){
pm = paste("nclust=",length(unique(ksethist$history[[i]])),sep="")
plot(X[,1],X[,2],col=ksethist$history[[i]], main=pm, cex=0.4, pch=19)
}
ksethist = ksets(dpath,k=4,init="random")
nhist = length(ksethist$history)
imrow = floor(sqrt(nhist))
imcol = ceiling(nhist/imrow)
par(mfrow=c(imrow,imcol),pty="s")
for (i in 1:nhist){
pm = paste("nclust=",length(unique(ksethist$history[[i]])),sep="")
plot(X[,1],X[,2],col=ksethist$history[[i]], main=pm, cex=0.4, pch=19)
}
ksethist = ksets(dpath,k=4,init="random")
nhist = length(ksethist$history)
imrow = floor(sqrt(nhist))
imcol = ceiling(nhist/imrow)
par(mfrow=c(imrow,imcol),pty="s")
for (i in 1:nhist){
pm = paste("nclust=",length(unique(ksethist$history[[i]])),sep="")
plot(X[,1],X[,2],col=ksethist$history[[i]], main=pm, cex=0.4, pch=19)
}
ksethist = ksets(dpath,k=4,init="random")
nhist = length(ksethist$history)
imrow = floor(sqrt(nhist))
imcol = ceiling(nhist/imrow)
par(mfrow=c(imrow,imcol),pty="s")
for (i in 1:nhist){
pm = paste("nclust=",length(unique(ksethist$history[[i]])),sep="")
plot(X[,1],X[,2],col=ksethist$history[[i]], main=pm, cex=0.4, pch=19)
}
ksethist = ksets(dpath,k=4,init="random")
nhist = length(ksethist$history)
imrow = floor(sqrt(nhist))
imcol = ceiling(nhist/imrow)
par(mfrow=c(imrow,imcol),pty="s")
for (i in 1:nhist){
pm = paste("nclust=",length(unique(ksethist$history[[i]])),sep="")
plot(X[,1],X[,2],col=ksethist$history[[i]], main=pm, cex=0.4, pch=19)
}
ksethist = ksets(dpath,k=4,init="random")
nhist = length(ksethist$history)
imrow = floor(sqrt(nhist))
imcol = ceiling(nhist/imrow)
par(mfrow=c(imrow,imcol),pty="s")
for (i in 1:nhist){
pm = paste("nclust=",length(unique(ksethist$history[[i]])),sep="")
plot(X[,1],X[,2],col=ksethist$history[[i]], main=pm, cex=0.4, pch=19)
}
ksethist = ksets(dpath,k=4,init="random")
nhist = length(ksethist$history)
imrow = floor(sqrt(nhist))
imcol = ceiling(nhist/imrow)
par(mfrow=c(imrow,imcol),pty="s")
for (i in 1:nhist){
pm = paste("nclust=",length(unique(ksethist$history[[i]])),sep="")
plot(X[,1],X[,2],col=ksethist$history[[i]], main=pm, cex=0.4, pch=19)
}
ksethist = ksets(dpath,k=4,init="random")
nhist = length(ksethist$history)
imrow = floor(sqrt(nhist))
imcol = ceiling(nhist/imrow)
par(mfrow=c(imrow,imcol),pty="s")
for (i in 1:nhist){
pm = paste("nclust=",length(unique(ksethist$history[[i]])),sep="")
plot(X[,1],X[,2],col=ksethist$history[[i]], main=pm, cex=0.4, pch=19)
}
ksethist$history
library(DAS)
ksethist = ksets(dpath,k=4,init="random")
nhist = length(ksethist$history)
imrow = floor(sqrt(nhist))
imcol = ceiling(nhist/imrow)
par(mfrow=c(imrow,imcol),pty="s")
for (i in 1:nhist){
pm = paste("nclust=",length(unique(ksethist$history[[i]])),sep="")
plot(X[,1],X[,2],col=ksethist$history[[i]], main=pm, cex=0.4, pch=19)
}
library(DAS)
library(DAS)
library(DAS)
ksethist = ksets(dpath,k=4,init="random")
nhist = length(ksethist$history)
imrow = floor(sqrt(nhist))
imcol = ceiling(nhist/imrow)
par(mfrow=c(imrow,imcol),pty="s")
for (i in 1:nhist){
pm = paste("nclust=",length(unique(ksethist$history[[i]])),sep="")
plot(X[,1],X[,2],col=ksethist$history[[i]], main=pm, cex=0.4, pch=19)
}
ksethist = ksets(dpath,k=4,init="random")
nhist = length(ksethist$history)
imrow = floor(sqrt(nhist))
imcol = ceiling(nhist/imrow)
par(mfrow=c(imrow,imcol),pty="s")
for (i in 1:nhist){
pm = paste("nclust=",length(unique(ksethist$history[[i]])),sep="")
plot(X[,1],X[,2],col=ksethist$history[[i]], main=pm, cex=0.4, pch=19)
}
ksethist = ksets(dpath,k=4,init="random")
nhist = length(ksethist$history)
imrow = floor(sqrt(nhist))
imcol = ceiling(nhist/imrow)
par(mfrow=c(imrow,imcol),pty="s")
for (i in 1:nhist){
pm = paste("nclust=",length(unique(ksethist$history[[i]])),sep="")
plot(X[,1],X[,2],col=ksethist$history[[i]], main=pm, cex=0.4, pch=19)
}
ksethist = ksets(dpath,k=4,init="random")
nhist = length(ksethist$history)
imrow = floor(sqrt(nhist))
imcol = ceiling(nhist/imrow)
par(mfrow=c(imrow,imcol),pty="s")
for (i in 1:nhist){
pm = paste("nclust=",length(unique(ksethist$history[[i]])),sep="")
plot(X[,1],X[,2],col=ksethist$history[[i]], main=pm, cex=0.4, pch=19)
}
ksethist = ksets(dpath,k=4,init="random")
nhist = length(ksethist$history)
imrow = floor(sqrt(nhist))
imcol = ceiling(nhist/imrow)
par(mfrow=c(imrow,imcol),pty="s")
for (i in 1:nhist){
pm = paste("nclust=",length(unique(ksethist$history[[i]])),sep="")
plot(X[,1],X[,2],col=ksethist$history[[i]], main=pm, cex=0.4, pch=19)
}
ksethist = ksets(dpath,k=4,init="random")
nhist = length(ksethist$history)
imrow = floor(sqrt(nhist))
imcol = ceiling(nhist/imrow)
par(mfrow=c(imrow,imcol),pty="s")
for (i in 1:nhist){
pm = paste("nclust=",length(unique(ksethist$history[[i]])),sep="")
plot(X[,1],X[,2],col=ksethist$history[[i]], main=pm, cex=0.4, pch=19)
}
ksethist = ksets(dpath,k=4,init="random")
nhist = length(ksethist$history)
imrow = floor(sqrt(nhist))
imcol = ceiling(nhist/imrow)
par(mfrow=c(imrow,imcol),pty="s")
for (i in 1:nhist){
pm = paste("nclust=",length(unique(ksethist$history[[i]])),sep="")
plot(X[,1],X[,2],col=ksethist$history[[i]], main=pm, cex=0.4, pch=19)
}
ksethist = ksets(dpath,k=4,init="random")
nhist = length(ksethist$history)
imrow = floor(sqrt(nhist))
imcol = ceiling(nhist/imrow)
par(mfrow=c(imrow,imcol),pty="s")
for (i in 1:nhist){
pm = paste("nclust=",length(unique(ksethist$history[[i]])),sep="")
plot(X[,1],X[,2],col=ksethist$history[[i]], main=pm, cex=0.4, pch=19)
}
ksethist = ksets(dpath,k=4,init="random")
nhist = length(ksethist$history)
imrow = floor(sqrt(nhist))
imcol = ceiling(nhist/imrow)
par(mfrow=c(imrow,imcol),pty="s")
for (i in 1:nhist){
pm = paste("nclust=",length(unique(ksethist$history[[i]])),sep="")
plot(X[,1],X[,2],col=ksethist$history[[i]], main=pm, cex=0.4, pch=19)
}
ksethist = ksets(dpath,k=4,init="random")
nhist = length(ksethist$history)
imrow = floor(sqrt(nhist))
imcol = ceiling(nhist/imrow)
par(mfrow=c(imrow,imcol),pty="s")
for (i in 1:nhist){
pm = paste("nclust=",length(unique(ksethist$history[[i]])),sep="")
plot(X[,1],X[,2],col=ksethist$history[[i]], main=pm, cex=0.4, pch=19)
}
ksethist = ksets(dpath,k=4,init="random")
nhist = length(ksethist$history)
imrow = floor(sqrt(nhist))
imcol = ceiling(nhist/imrow)
par(mfrow=c(imrow,imcol),pty="s")
for (i in 1:nhist){
pm = paste("nclust=",length(unique(ksethist$history[[i]])),sep="")
plot(X[,1],X[,2],col=ksethist$history[[i]], main=pm, cex=0.4, pch=19)
}
ksethist = ksets(dpath,k=4,init="random")
nhist = length(ksethist$history)
imrow = floor(sqrt(nhist))
imcol = ceiling(nhist/imrow)
par(mfrow=c(imrow,imcol),pty="s")
for (i in 1:nhist){
pm = paste("nclust=",length(unique(ksethist$history[[i]])),sep="")
plot(X[,1],X[,2],col=ksethist$history[[i]], main=pm, cex=0.4, pch=19)
}
library(DAS)
x = matrix(rnorm(25),nrow=5)
x = x%*%t(x)
x
rowSums(x)
index(rowSums(x))[1:3]
order(rowSums(x))[1:3]
library(DAS)
library(DAS)
# personal test
library(maotai)
library(cluster)
npt = 300
inner.r = runif(npt, min=10, max=12); inner.theta = runif(npt, min=0, max=2*pi)
outer.r = runif(npt, min=20, max=22); outer.theta = runif(npt, min=0, max=2*pi)
X1 = cbind(inner.r*cos(inner.theta), inner.r*sin(inner.theta))
X2 = cbind(outer.r*cos(outer.theta), outer.r*sin(outer.theta))
X  = rbind(X1,X2)
cl.kmeans  = kmeans(X,4)$cluster
cl.akclust = akclust(as.matrix(dist(X)), k=4)$cluster
par(mfrow=c(1,2), pty="s")
plot(X[,1],X[,2],col=cl.kmeans, main="naive k-means")
plot(X[,1],X[,2],col=cl.akclust,main="approximate k-means")
par(mfrow=c(1,2), pty="s")
plot(X[,1],X[,2],col=cl.kmeans, main="naive k-means")
plot(X[,1],X[,2],col=cl.akclust,main="approximate k-means")
# test 1. compare naive kmeans and approximate k-means clustering
cl.kmeans  = kmeans(X,4)$cluster
cl.akclust = akclust(as.matrix(dist(X)), k=4)$cluster
par(mfrow=c(1,2), pty="s")
plot(X[,1],X[,2],col=cl.kmeans, main="naive k-means")
plot(X[,1],X[,2],col=cl.akclust,main="approximate k-means")
# exactly follow the protocol from the paper
dX = as.matrix(dist(X))
ddX = array(0,c(nrow(dX),nrow(dX)))
for (i in 1:(nrow(dX)-1)){
for (j in (i+1):nrow(dX)){
if (dX[i,j] < 5){
ddX[i,j] <- ddX[j,i] <- 1
}
}
}
dpath       = maotai::shortestpath(ddX)
cl.akcl2    = akclust(as.dist(dpath),k=4,init="random")$cluster
cl.ksets    = ksets(as.dist(dpath),k=4, init="random")$cluster
cl.kmedgr   = cluster::pam(as.dist(dpath),k=4)$clustering
par(mfrow=c(1,3),pty="s")
plot(X[,1],X[,2],col=cl.akcl2, pch=19, main="graph approximate k-means", cex=0.25)
plot(X[,1],X[,2],col=cl.ksets, pch=19, main="graph k-sets", cex=0.25)
plot(X[,1],X[,2],col=cl.kmedgr, pch=19, main="graph k-medoids", cex=0.25)
dpath       = maotai::shortestpath(ddX)
cl.akcl2    = akclust(as.dist(dpath),k=2,init="random")$cluster
cl.ksets    = ksets(as.dist(dpath),k=2, init="random")$cluster
cl.kmedgr   = cluster::pam(as.dist(dpath),k=2)$clustering
par(mfrow=c(1,3),pty="s")
plot(X[,1],X[,2],col=cl.akcl2, pch=19, main="graph approximate k-means", cex=0.25)
plot(X[,1],X[,2],col=cl.ksets, pch=19, main="graph k-sets", cex=0.25)
plot(X[,1],X[,2],col=cl.kmedgr, pch=19, main="graph k-medoids", cex=0.25)
dpath       = maotai::shortestpath(ddX)
cl.akcl2    = akclust(as.dist(dpath),k=2,init="random")$cluster
cl.ksets    = ksets(as.dist(dpath),k=2, init="random")$cluster
cl.kmedgr   = cluster::pam(as.dist(dpath),k=2)$clustering
par(mfrow=c(1,3),pty="s")
plot(X[,1],X[,2],col=cl.akcl2, pch=19, main="graph approximate k-means", cex=0.25)
plot(X[,1],X[,2],col=cl.ksets, pch=19, main="graph k-sets", cex=0.25)
plot(X[,1],X[,2],col=cl.kmedgr, pch=19, main="graph k-medoids", cex=0.25)
dpath       = maotai::shortestpath(ddX)
cl.akcl2    = akclust(as.dist(dpath),k=3,init="random")$cluster
cl.ksets    = ksets(as.dist(dpath),k=3, init="random")$cluster
cl.kmedgr   = cluster::pam(as.dist(dpath),k=3)$clustering
par(mfrow=c(1,3),pty="s")
plot(X[,1],X[,2],col=cl.akcl2, pch=19, main="graph approximate k-means", cex=0.25)
plot(X[,1],X[,2],col=cl.ksets, pch=19, main="graph k-sets", cex=0.25)
plot(X[,1],X[,2],col=cl.kmedgr, pch=19, main="graph k-medoids", cex=0.25)
dpath       = maotai::shortestpath(ddX)
cl.akcl2    = akclust(as.dist(dpath),k=3,init="random")$cluster
cl.ksets    = ksets(as.dist(dpath),k=3, init="random")$cluster
cl.kmedgr   = cluster::pam(as.dist(dpath),k=3)$clustering
par(mfrow=c(1,3),pty="s")
plot(X[,1],X[,2],col=cl.akcl2, pch=19, main="graph approximate k-means", cex=0.25)
plot(X[,1],X[,2],col=cl.ksets, pch=19, main="graph k-sets", cex=0.25)
plot(X[,1],X[,2],col=cl.kmedgr, pch=19, main="graph k-medoids", cex=0.25)
library(DAS)
library(DAS)
# personal test
library(maotai)
library(cluster)
npt = 300
inner.r = runif(npt, min=10, max=12); inner.theta = runif(npt, min=0, max=2*pi)
outer.r = runif(npt, min=20, max=22); outer.theta = runif(npt, min=0, max=2*pi)
X1 = cbind(inner.r*cos(inner.theta), inner.r*sin(inner.theta))
X2 = cbind(outer.r*cos(outer.theta), outer.r*sin(outer.theta))
X  = rbind(X1,X2)
# test 1. compare naive kmeans and approximate k-means clustering
cl.kmeans  = kmeans(X,4)$cluster
cl.akclust = akmeans(as.matrix(dist(X)), k=4)$cluster
par(mfrow=c(1,2), pty="s")
plot(X[,1],X[,2],col=cl.kmeans, main="naive k-means")
plot(X[,1],X[,2],col=cl.akclust,main="approximate k-means")
# exactly follow the protocol from the paper
dX = as.matrix(dist(X))
ddX = array(0,c(nrow(dX),nrow(dX)))
for (i in 1:(nrow(dX)-1)){
for (j in (i+1):nrow(dX)){
if (dX[i,j] < 5){
ddX[i,j] <- ddX[j,i] <- 1
}
}
}
dpath       = maotai::shortestpath(ddX)
cl.akcl2    = akmeans(as.dist(dpath),k=3,init="random")$cluster
cl.ksets    = ksets(as.dist(dpath),k=3, init="random")$cluster
cl.kmedgr   = cluster::pam(as.dist(dpath),k=3)$clustering
par(mfrow=c(1,3),pty="s")
plot(X[,1],X[,2],col=cl.akcl2, pch=19, main="graph approximate k-means", cex=0.25)
plot(X[,1],X[,2],col=cl.ksets, pch=19, main="graph k-sets", cex=0.25)
plot(X[,1],X[,2],col=cl.kmedgr, pch=19, main="graph k-medoids", cex=0.25)
library(DAS)
library(DAS)
library(DAS)
library(DAS)
library(DAS)
library(DAS)
# personal test
library(maotai)
library(cluster)
npt = 300
inner.r = runif(npt, min=10, max=12); inner.theta = runif(npt, min=0, max=2*pi)
outer.r = runif(npt, min=20, max=22); outer.theta = runif(npt, min=0, max=2*pi)
X1 = cbind(inner.r*cos(inner.theta), inner.r*sin(inner.theta))
X2 = cbind(outer.r*cos(outer.theta), outer.r*sin(outer.theta))
X  = rbind(X1,X2)
# test 1. compare naive kmeans and approximate k-means clustering
cl.kmeans  = kmeans(X,4)$cluster
cl.akclust = akmeans(as.matrix(dist(X)), k=4)$cluster
par(mfrow=c(1,2), pty="s")
plot(X[,1],X[,2],col=cl.kmeans, main="naive k-means")
plot(X[,1],X[,2],col=cl.akclust,main="approximate k-means")
# exactly follow the protocol from the paper
dX = as.matrix(dist(X))
ddX = array(0,c(nrow(dX),nrow(dX)))
for (i in 1:(nrow(dX)-1)){
for (j in (i+1):nrow(dX)){
if (dX[i,j] < 5){
ddX[i,j] <- ddX[j,i] <- 1
}
}
}
dpath       = maotai::shortestpath(ddX)
cl.akcl2    = akmeans(as.dist(dpath),k=3,init="random")$cluster
cl.ksets    = ksets(as.dist(dpath),k=3, init="random")$cluster
cl.kmedgr   = cluster::pam(as.dist(dpath),k=3)$clustering
par(mfrow=c(1,3),pty="s")
plot(X[,1],X[,2],col=cl.akcl2, pch=19, main="graph approximate k-means", cex=0.25)
plot(X[,1],X[,2],col=cl.ksets, pch=19, main="graph k-sets", cex=0.25)
plot(X[,1],X[,2],col=cl.kmedgr, pch=19, main="graph k-medoids", cex=0.25)
library(DAS)
library(kernlab)
help("kmmd")
x <- matrix(runif(300),100)
y <- matrix(runif(300)+1,100)
mmdo <- kmmd(x, y)
mmdo
xx = kernelMatrix(rbfdot(1), x)
xx
eigen(xx)$values
min(eigen(xx)$values)
library(DAS)
